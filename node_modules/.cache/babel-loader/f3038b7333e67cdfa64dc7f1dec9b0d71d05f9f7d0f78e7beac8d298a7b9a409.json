{"ast":null,"code":"const _ = require('lodash');\nconst util = require('util');\nconst kleur = require('kleur');\nconst LOG_LEVELS = {\n  'fatal': {\n    value: 50,\n    mapping: 'error'\n  },\n  'error': {\n    value: 40,\n    mapping: 'error'\n  },\n  'warn': {\n    value: 30,\n    mapping: 'warn'\n  },\n  'info': {\n    value: 20,\n    mapping: 'info'\n  },\n  'log': {\n    value: 20,\n    mapping: 'log'\n  },\n  'debug': {\n    value: 10,\n    mapping: 'debug'\n  },\n  'all': {\n    value: 0,\n    mapping: 'log'\n  }\n};\nconst COLOR_MAPPINGS = {\n  'fatal': kleur.red().inverse,\n  'error': kleur.red,\n  'warn': kleur.yellow,\n  'info': kleur.green,\n  'log': kleur.green,\n  'debug': kleur.magenta\n};\nclass Logger {\n  /**\n   * options object\n   *  {\n   *    level: 'warn',\n   *  }\n   * @param {Object} options - options object\n   */\n  constructor(options = {}) {\n    const noop = () => {};\n    this.level = _.get(options, 'level', 'all');\n    this.logger = _.get(options.logger) || console;\n    this.debug = noop;\n    this.log = noop;\n    this.info = noop;\n    this.warn = noop;\n    this.error = noop;\n    this.fatal = noop;\n    const levelValue = _.get(LOG_LEVELS, `${this.level}.value`, LOG_LEVELS['fatal'].value);\n    console.log(\"Logger -> noop -> levelValue\", levelValue);\n\n    // only add logging methods based on logging level\n    Object.entries(LOG_LEVELS).forEach(([key, level]) => {\n      if (levelValue <= level.value) {\n        this[key] = (...message) => {\n          this.logger[level.mapping](Logger.formatted(key, ...message));\n          return message;\n        };\n      }\n    });\n  }\n  static formatted(type = '', ...message) {\n    const msg = message.reduce((accumulator, msg) => {\n      if (typeof msg === 'object') {\n        msg = `${util.inspect(msg, {\n          showHidden: false,\n          depth: 2,\n          colors: kleur.enabled,\n          breakLength: Number.POSITIVE_INFINITY\n        })}`;\n      }\n      accumulator += `${msg} `;\n      return accumulator;\n    }, '');\n    const timestamp = kleur.grey(`[${new Date().toISOString()}]`);\n    const levelColor = COLOR_MAPPINGS[type];\n    const level = `[${type.toUpperCase()}]`.padEnd(7);\n    return `${timestamp} ${levelColor(level)} - ${msg}`;\n  }\n}\nmodule.exports = Logger;","map":{"version":3,"names":["_","require","util","kleur","LOG_LEVELS","value","mapping","COLOR_MAPPINGS","red","inverse","yellow","green","magenta","Logger","constructor","options","noop","level","get","logger","console","debug","log","info","warn","error","fatal","levelValue","Object","entries","forEach","key","message","formatted","type","msg","reduce","accumulator","inspect","showHidden","depth","colors","enabled","breakLength","Number","POSITIVE_INFINITY","timestamp","grey","Date","toISOString","levelColor","toUpperCase","padEnd","module","exports"],"sources":["C:/Users/amabr/OneDrive/Bureau/Mielsite/node_modules/smtpjs/src/smtp/logger/Logger.js"],"sourcesContent":["const _ = require('lodash')\nconst util = require('util')\nconst kleur = require('kleur')\n\nconst LOG_LEVELS = {\n  'fatal': { value: 50, mapping: 'error' },\n  'error': { value: 40, mapping: 'error' },\n  'warn': { value: 30, mapping: 'warn' },\n  'info': { value: 20, mapping: 'info' },\n  'log': { value: 20, mapping: 'log' },\n  'debug': { value: 10, mapping: 'debug' },\n  'all': { value: 0, mapping: 'log' },\n}\n\nconst COLOR_MAPPINGS = {\n  'fatal': kleur.red().inverse,\n  'error': kleur.red,\n  'warn': kleur.yellow,\n  'info': kleur.green,\n  'log': kleur.green,\n  'debug': kleur.magenta,\n}\n\nclass Logger {\n  /**\n   * options object\n   *  {\n   *    level: 'warn',\n   *  }\n   * @param {Object} options - options object\n   */\n  constructor (options = {}) {\n    const noop = () => {}\n\n    this.level = _.get(options, 'level', 'all')\n    this.logger = _.get(options.logger) || console\n\n    this.debug = noop\n    this.log = noop\n    this.info = noop\n    this.warn = noop\n    this.error = noop\n    this.fatal = noop\n\n    const levelValue = _.get(LOG_LEVELS, `${this.level}.value`, LOG_LEVELS['fatal'].value)\n    console.log(\"Logger -> noop -> levelValue\", levelValue)\n\n\n    // only add logging methods based on logging level\n    Object.entries(LOG_LEVELS).forEach(([key, level]) => {\n      if (levelValue <= level.value) {\n        this[key] = (...message) => {\n          this.logger[level.mapping](Logger.formatted(key, ...message))\n          return message\n        }\n      }\n    })\n  }\n\n  static formatted (type = '', ...message) {\n    const msg = message.reduce((accumulator, msg) => {\n      if (typeof msg === 'object') {\n        msg = `${util.inspect(msg, { showHidden: false, depth: 2, colors: kleur.enabled, breakLength: Number.POSITIVE_INFINITY })}`\n      }\n\n      accumulator += `${msg} `\n\n      return accumulator\n    }, '')\n\n    const timestamp = kleur.grey(`[${new Date().toISOString()}]`)\n    const levelColor = COLOR_MAPPINGS[type]\n    const level = `[${type.toUpperCase()}]`.padEnd(7)\n\n    return `${timestamp} ${levelColor(level)} - ${msg}`\n  }\n}\n\nmodule.exports = Logger\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}